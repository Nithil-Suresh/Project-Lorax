"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from urllib.parse import urlparse
import dj_database_url
import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$$#i^vn&xis_rvinjjr9l*j=_w9c!z(^*+0@5!^s-+1tn79lkx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost',
                 'project-a-05-34ae202c1a7b.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_bootstrap5',
    'project_lorax.apps.ProjectLoraxConfig',
    'django.contrib.sites',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    'storages',
]

SITE_ID = 2

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    "allauth.account.middleware.AccountMiddleware",
]


ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


# this will make the heroku database url works, but locally it will not work
# DATABASE_URL = os.environ.get('DATABASE_URL')
# DATABASE_URL = "postgres://vebisdgklyegnt:546d1f6d0f030efc477a3d64d7e771a516fab1806aeddcad116ec1e7c2e4be36@ec2-44-213-151-75.compute-1.amazonaws.com:5432/d922b2b34giq5m"
# DATABASE_URL = "postgres://lgzrfxffeqbbfe:2f100a7b7514d53c3b6e52f25c06490e3597793d121957556ebe3640209e2590@ec2-44-214-98-128.compute-1.amazonaws.com:5432/d7i42552kak58d"
# DATABASE_URL = "postgres://tlakhtwsougmtu:96c742cd2eb347a587d74179a27c9835f7e3952bf732c1fd1719a63624a9fc43@ec2-44-215-22-37.compute-1.amazonaws.com:5432/d75c0jsg8j1839"
DATABASE_URL = "postgres://ruuayljhytuldu:594ac503c8460c82ffb979000b2bdb0e5aa902a11abc664eb7192152f114c592@ec2-34-238-201-192.compute-1.amazonaws.com:5432/d8rvqk9fvncine"
url_parts = urlparse(DATABASE_URL)

DATABASES_USER = url_parts.username
DATABASES_PASSWORD = url_parts.password
DATABASE_HOST = url_parts.hostname
DATABASE_PORT = url_parts.port
DATABASE_NAME = url_parts.path[1:]


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DATABASE_NAME,
        'USER': DATABASES_USER,
        'PASSWORD': DATABASES_PASSWORD,
        'HOST': DATABASE_HOST,
        'PORT': DATABASE_PORT,
    },
}

# DATABASES['default'] = dj_database_url.config(conn_max_age = 600, ssl_require = True)

if 'test' in sys.argv:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': ':memory:',  # Use in-memory SQLite database for tests
    }

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = "static/"

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

STORAGES = {
    # "staticfiles": {
    #     "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"
    # }

    # for images
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3StaticStorage",
    },

    # for css and javascript files
    "staticfiles": {
        "BACKEND": "storages.backends.s3boto3.S3StaticStorage",
    }

}

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

# AWS Configuration

AWS_ACCESS_KEY_ID = 'AKIA3FLDY65HLPH2WPX6'
AWS_SECRET_ACCESS_KEY = '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'


# S3 Configurations

AWS_STORAGE_BUCKET_NAME = 'group05bucket'

AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

AWS_S3_FILE_OVERWRITE = False


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = BASE_DIR / "staticfiles"

SOCIALACCOUNT_LOGIN_ON_GET = True
